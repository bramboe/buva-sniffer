substitutions:
  hostname: cc1101-sniffer
  device_name: CC1101 Sniffer
  device_id: cc1101_sniffer

esphome:
  name: ${hostname}
  comment: ${device_name}
  platformio_options:
    lib_deps:
      - "jgromes/RadioLib"

# ESP32 configuration (new syntax)
esp32:
  board: esp32dev
  framework:
    type: arduino

# Keep your style (logger, wifi, api, ota, webserver, etc)
logger:
  level: DEBUG
  baud_rate: 115200

# Enable Home Assistant API
api:
  encryption:
    key: !secret buva_api

ota:
  - platform: esphome
    password: !secret buva_ota

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "BUVA RF Sniffer Fallback"
    password: !secret buva_ap

web_server:
  port: 80

# SPI bus used by CC1101 (adjust pins if you like)
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19

# Pull the sniffer component from your GitHub repo
# Using @main branch (always latest with diagnostics)
external_components:
  - source: github://bramboe/buva-sniffer@main
    components: [ cc1101_sniffer ]
    refresh: always

# Configure the CC1101 sniffer component (new simplified approach)
cc1101_sniffer:
  cs_pin: GPIO5
  gdo0_pin: GPIO4
  gdo2_pin: GPIO15
  frequency: 868.3  # MHz (change to 433.92 for 433MHz systems)
  update_interval: 200ms

# Optional: wifi signal + uptime sensors
sensor:
  - platform: wifi_signal
    name: "${device_name} WiFi RSSI"
    id: ${device_id}_rssi
  - platform: uptime
    name: "${device_name} Uptime"
    id: ${device_id}_uptime

switch:
  - platform: restart
    name: "${device_name} Restart"
